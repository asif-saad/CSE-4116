import math

p = 656692050181897513638241554199181923922955921760928836766304161790553989228223793461834703506872747071705167995972707253940099469869516422893633357693

q = 533791764536500962982816454877600313815808544134584704665367971790938714376754987723404131641943766815146845004667377003395107827504566198008424339207

N = p*q


def GCD(x,y):
    while(y):
       x, y = y, x % y
    return abs(x)
    

phi_n = (p-1)*(q-1)

for i in range(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, phi_n):
    if GCD(i, phi_n) == 1:
        e=i
        break
print("encrypted key value: ",e)

plaintext = 1807012


encryptedMessage = pow(plaintext, e, N)

d= pow(e, -1, phi_n)

decryptedMessage = pow(encryptedMessage, d, N)

print("plainext: "+str(plaintext))
print("encrypted: "+str(encryptedMessage))
print("decrypted: "+str(decryptedMessage))